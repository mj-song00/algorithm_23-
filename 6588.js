// 1742년, 독일의 아마추어 수학가 크리스티안 골드바흐는 레온하르트 오일러에게 다음과 같은 추측을 제안하는 편지를 보냈다.
// 4보다 큰 모든 짝수는 두 홀수 소수의 합으로 나타낼 수 있다.
// 예를 들어 8은 3 + 5로 나타낼 수 있고, 3과 5는 모두 홀수인 소수이다. 또, 20 = 3 + 17 = 7 + 13, 42 = 5 + 37 = 11 + 31 = 13 + 29 = 19 + 23 이다.
// 이 추측은 아직도 해결되지 않은 문제이다.

// 백만 이하의 모든 짝수에 대해서, 이 추측을 검증하는 프로그램을 작성하시오.

// 풀이
// 입력된 문자를 숫자로 바꾼다(o)
// 입력된 수를 담을 배열을 생성한다(o)
// input을 순회한다(o)
// 순회하면서 숫자의 합이 되는 조합을 구한다
// const input = require("fs")
//   .readFileSync("6588.txt")
//   .toString()
//   .trim()
//   .split("\n")
//   .map((i) => parseInt(i));

// let arr1 = [];
// let arr2 = [];

// //arr1의 원소 구하기
// for (nums of input) {
//   for (let i = 0; i <= nums / 2; i++) {
//     arr1.push(i);
//     console.log(arr1);
//   }
// }

// //arr2의 원소구하기
// for (let i = 0; i < arr1.length; i++) {
//   arr2.push(input - arr1[i]);
//   console.log(arr2);
// }

// 1. 소수를 구한다
// 2. 소수중 해당값에 해당하는 숫자를 구한다?a
